spring.datasource.url=jdbc:mysql://locahost/tv-db?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf-8&autoReconnect=true
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=create

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

keycloak.realm=ea-final
keycloak.auth-server-url=https://lemur-18.cloud-iam.com/auth
keycloak.ssl-required=external
keycloak.resource=ea-final
keycloak.public-client=false
keycloak.credentials.secret=c9SSS0jg4rYX2cPzjQVtc4tT1HC9D8RO
keycloak.security-constraints[0].authRoles[0]=user

eureka.client.service-url.defaultZone=http://service-discovery:8761/eureka/
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

spring.security.oauth2.client.provider.keycloak.issuer-uri=https://lemur-18.cloud-iam.com/auth/realms/ea-final
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

spring.security.oauth2.client.registration.keycloak.client-id=ea-final
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=password
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:7676/



spring.kafka.producer.bootstrap-servers= ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
spring.consumer.bootstrap-servers= ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.group-id=tv-series
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.topic.name=user-topic
#group-id=${KAFKA_CONSUMER_GROUP_ID:group}
#custom.tv-series-signup-topic=${KAFKA_TV_SERIES_SIGNUP_TOPIC:tv-series-signup-events}
spring.kafka.custom.enable-listeners=${KAFKA_ENABLE_LISTENERS:true}
spring.rabbitmq.host=${RABBITMQ_HOST:rabbit-mq}
spring.rabbitmq.username=${RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}
spring.rabbitmq.port=${RABBITMQ_PORT:15672}
spring.rabbitmq.exchange=${RABBITMQ_EXCHANGE:user.exchange}
spring.rabbitmq.queue=${RABBITMQ_QUEUE:user.queue}
spring.rabbitmq.routingkey=${RABBITMQ_ROUTING:user.routingkey}
zipkin.enabled=${ZIPKIN_ENABLED:true}
# TODO: zipkin network
zipkin.base-url=${ZIPKIN_URL:http://localhost:9411/}
#For CircuitBreaker
management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
resilience4j.circuitbreaker.instances.tv-series-service.register-health-indicator=true
resilience4j.circuitbreaker.instances.tv-series-service.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.tv-series-service.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.tv-series-service.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.tv-series-service.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.tv-series-service.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.tv-series-service.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.tv-series-service.sliding-window-size=10
resilience4j.circuitbreaker.instances.tv-series-service.sliding-window-type=COUNT_BASED
#try from rating service
resilience4j.retry.instances.tv-series-service.max-retry-attempts=5
resilience4j.retry.instances.tv-series-service.wait-duration=10s

spring.mvc.pathmatch.matching-strategy=ant_path_matcher



